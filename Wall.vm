function Wall.new 0
push constant 12
call Memory.alloc 1
pop pointer 0
push constant 10
pop this 5
push this 5
call Array.new 1
pop this 0
push this 5
call Array.new 1
pop this 1
push this 5
call Array.new 1
pop this 2
push this 5
call Array.new 1
pop this 3
push this 5
call Array.new 1
pop this 4
push this 5
call Array.new 1
pop this 8
push this 5
call Array.new 1
pop this 9
push constant 0
pop this 6
push constant 0
pop this 7
push constant 1
pop this 10
push constant 0
pop this 11
push pointer 0
return
function Wall.initialize 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop this 6
push constant 0
pop this 7
label WHILE_EXP0
push local 0
push this 5
lt
not
if-goto WHILE_END0
push local 0
push this 4
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push constant 5
lt
not
if-goto WHILE_END1
push local 0
push this 1
add
push constant 4
call Random.randRange 1
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push local 0
call Wall.getValidPosition 2
pop temp 0
push local 0
push this 4
add
push constant 0
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push local 0
call Wall.drawTarget 2
pop temp 0
push this 6
push constant 1
add
pop this 6
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
function Wall.addStar 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 5
lt
not
if-goto WHILE_END0
push local 0
push this 4
add
pop pointer 1
push that 0
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 1
add
push constant 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push local 0
call Wall.getValidPosition 2
pop temp 0
push local 0
push this 4
add
push constant 0
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push local 0
call Wall.drawTarget 2
pop temp 0
push this 6
push constant 1
add
pop this 6
push constant 0
not
pop this 7
push constant 0
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Wall.isRoundComplete 1
push argument 0
pop pointer 0
push this 6
push constant 0
eq
pop local 0
push local 0
push this 7
not
and
return
function Wall.drawTarget 4
push argument 0
pop pointer 0
push argument 1
push constant 0
lt
push argument 1
push this 5
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 1
push this 1
add
pop pointer 1
push that 0
pop local 0
push argument 1
push this 2
add
pop pointer 1
push that 0
pop local 1
push argument 1
push this 3
add
pop pointer 1
push that 0
pop local 2
push constant 15
pop local 3
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 0
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push local 2
push local 3
call Screen.drawCircle 3
pop temp 0
label IF_FALSE1
push local 0
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push local 3
sub
push local 2
push local 3
sub
push local 1
push local 3
add
push local 2
push local 3
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE2
push local 0
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
push local 1
push local 2
push local 3
call Wall.drawTriangle 4
pop temp 0
label IF_FALSE3
push local 0
push constant 4
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
push local 1
push local 2
push local 3
call Wall.drawDiamond 4
pop temp 0
label IF_FALSE4
push local 0
push constant 5
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push pointer 0
push local 1
push local 2
push local 3
call Wall.drawStar 4
pop temp 0
label IF_FALSE5
push local 0
push constant 6
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push pointer 0
push local 1
push local 2
push local 3
call Wall.drawHeart 4
pop temp 0
label IF_FALSE6
push constant 0
return
function Wall.drawTriangle 0
push argument 0
pop pointer 0
push argument 1
push argument 2
push argument 3
sub
push argument 1
push argument 3
sub
push argument 2
push argument 3
add
call Screen.drawLine 4
pop temp 0
push argument 1
push argument 3
sub
push argument 2
push argument 3
add
push argument 1
push argument 3
add
push argument 2
push argument 3
add
call Screen.drawLine 4
pop temp 0
push argument 1
push argument 3
add
push argument 2
push argument 3
add
push argument 1
push argument 2
push argument 3
sub
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Wall.drawDiamond 0
push argument 0
pop pointer 0
push argument 1
push argument 2
push argument 3
sub
push argument 1
push argument 3
add
push argument 2
call Screen.drawLine 4
pop temp 0
push argument 1
push argument 3
add
push argument 2
push argument 1
push argument 2
push argument 3
add
call Screen.drawLine 4
pop temp 0
push argument 1
push argument 2
push argument 3
add
push argument 1
push argument 3
sub
push argument 2
call Screen.drawLine 4
pop temp 0
push argument 1
push argument 3
sub
push argument 2
push argument 1
push argument 2
push argument 3
sub
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Wall.drawStar 1
push argument 0
pop pointer 0
push argument 3
pop local 0
push argument 1
push argument 2
push local 0
sub
push argument 1
push local 0
push constant 3
call Math.divide 2
add
push argument 2
push local 0
push constant 3
call Math.divide 2
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push local 0
push constant 3
call Math.divide 2
add
push argument 2
push local 0
push constant 3
call Math.divide 2
sub
push argument 1
push local 0
add
push argument 2
call Screen.drawLine 4
pop temp 0
push argument 1
push local 0
add
push argument 2
push argument 1
push local 0
push constant 3
call Math.divide 2
add
push argument 2
push local 0
push constant 3
call Math.divide 2
add
call Screen.drawLine 4
pop temp 0
push argument 1
push local 0
push constant 3
call Math.divide 2
add
push argument 2
push local 0
push constant 3
call Math.divide 2
add
push argument 1
push argument 2
push local 0
add
call Screen.drawLine 4
pop temp 0
push argument 1
push argument 2
push local 0
add
push argument 1
push local 0
push constant 3
call Math.divide 2
sub
push argument 2
push local 0
push constant 3
call Math.divide 2
add
call Screen.drawLine 4
pop temp 0
push argument 1
push local 0
push constant 3
call Math.divide 2
sub
push argument 2
push local 0
push constant 3
call Math.divide 2
add
push argument 1
push local 0
sub
push argument 2
call Screen.drawLine 4
pop temp 0
push argument 1
push local 0
sub
push argument 2
push argument 1
push local 0
push constant 3
call Math.divide 2
sub
push argument 2
push local 0
push constant 3
call Math.divide 2
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push local 0
push constant 3
call Math.divide 2
sub
push argument 2
push local 0
push constant 3
call Math.divide 2
sub
push argument 1
push argument 2
push local 0
sub
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Wall.drawHeart 4
push argument 0
pop pointer 0
push argument 1
push constant 8
sub
pop local 1
push argument 2
push constant 8
sub
pop local 2
push local 1
push local 2
push constant 32
call Math.multiply 2
add
pop local 3
push constant 16384
push local 3
add
pop local 0
push local 0
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 8184
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 16380
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 32766
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 32766
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 512
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 544
add
push constant 2
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 576
add
push constant 4
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 608
add
push constant 8
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 640
add
push constant 16
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 672
add
push constant 32
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 704
add
push constant 64
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 736
add
push constant 128
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 768
add
push constant 256
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 800
add
push constant 512
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 832
add
push constant 1024
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 864
add
push constant 2048
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 896
add
push constant 4096
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 928
add
push constant 8192
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 960
add
push constant 16384
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 992
add
push constant 32767
not
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
push constant 1984
call Memory.poke 2
pop temp 0
push local 0
push constant 33
add
push constant 8176
call Memory.poke 2
pop temp 0
push local 0
push constant 65
add
push constant 16376
call Memory.poke 2
pop temp 0
push local 0
push constant 97
add
push constant 32508
call Memory.poke 2
pop temp 0
push local 0
push constant 129
add
push constant 31996
call Memory.poke 2
pop temp 0
push local 0
push constant 161
add
push constant 3586
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 193
add
push constant 3074
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 225
add
push constant 7169
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 257
add
push constant 7169
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 289
add
push constant 7169
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 321
add
push constant 3073
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 353
add
push constant 3073
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 385
add
push constant 1537
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 417
add
push constant 769
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 449
add
push constant 257
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 481
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 513
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 545
add
push constant 32767
call Memory.poke 2
pop temp 0
push local 0
push constant 577
add
push constant 16383
call Memory.poke 2
pop temp 0
push local 0
push constant 609
add
push constant 8191
call Memory.poke 2
pop temp 0
push local 0
push constant 641
add
push constant 4095
call Memory.poke 2
pop temp 0
push local 0
push constant 673
add
push constant 2047
call Memory.poke 2
pop temp 0
push local 0
push constant 705
add
push constant 1023
call Memory.poke 2
pop temp 0
push local 0
push constant 737
add
push constant 511
call Memory.poke 2
pop temp 0
push local 0
push constant 769
add
push constant 255
call Memory.poke 2
pop temp 0
push local 0
push constant 801
add
push constant 127
call Memory.poke 2
pop temp 0
push local 0
push constant 833
add
push constant 63
call Memory.poke 2
pop temp 0
push local 0
push constant 865
add
push constant 31
call Memory.poke 2
pop temp 0
push local 0
push constant 897
add
push constant 15
call Memory.poke 2
pop temp 0
push local 0
push constant 929
add
push constant 7
call Memory.poke 2
pop temp 0
push local 0
push constant 961
add
push constant 3
call Memory.poke 2
pop temp 0
push local 0
push constant 993
add
push constant 1
call Memory.poke 2
pop temp 0
push constant 0
return
function Wall.spawnHeart 1
push argument 0
pop pointer 0
push this 11
not
push argument 1
push constant 3
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 5
lt
not
if-goto WHILE_END0
push local 0
push this 4
add
pop pointer 1
push that 0
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push this 1
add
push constant 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 2
add
push constant 50
push constant 400
call Random.randRange 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 3
add
push constant 50
push constant 100
call Random.randRange 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 4
add
push constant 0
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
pop this 11
push pointer 0
push local 0
call Wall.drawTarget 2
pop temp 0
push this 6
push constant 1
add
pop this 6
push constant 0
return
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE0
push constant 0
return
function Wall.addHeart 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 5
lt
not
if-goto WHILE_END0
push local 0
push this 4
add
pop pointer 1
push that 0
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 1
add
push constant 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push local 0
call Wall.getValidPosition 2
pop temp 0
push local 0
push this 4
add
push constant 0
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push local 0
call Wall.drawTarget 2
pop temp 0
push this 6
push constant 1
add
pop this 6
push constant 0
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Wall.checkHit 6
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop local 5
label WHILE_EXP0
push local 0
push this 5
lt
not
if-goto WHILE_END0
push local 0
push this 4
add
pop pointer 1
push that 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 1
push local 0
push this 3
add
pop pointer 1
push that 0
pop local 2
push local 0
push this 1
add
pop pointer 1
push that 0
pop local 3
push argument 1
push local 1
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push local 1
sub
pop local 4
goto IF_END1
label IF_FALSE1
push local 1
push argument 1
sub
pop local 4
label IF_END1
push local 3
push constant 6
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 4
push constant 25
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
push local 0
call Wall.clearTarget 2
pop temp 0
push local 0
push this 4
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 6
push constant 1
sub
pop this 6
push local 3
pop local 5
push constant 0
pop this 11
push local 5
return
label IF_FALSE3
goto IF_END2
label IF_FALSE2
push local 4
push constant 20
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
push local 0
call Wall.clearTarget 2
pop temp 0
push local 0
push this 4
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 6
push constant 1
sub
pop this 6
push local 3
pop local 5
push local 3
push constant 5
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
pop this 7
label IF_FALSE5
push local 5
return
label IF_FALSE4
label IF_END2
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Wall.clearTarget 4
push argument 0
pop pointer 0
push argument 1
push this 1
add
pop pointer 1
push that 0
pop local 0
push argument 1
push this 2
add
pop pointer 1
push that 0
pop local 1
push argument 1
push this 3
add
pop pointer 1
push that 0
pop local 2
push constant 15
pop local 3
push local 0
push constant 6
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 1
push local 2
push local 3
call Wall.clearHeart 4
pop temp 0
push constant 0
return
label IF_FALSE0
push constant 0
call Screen.setColor 1
pop temp 0
push local 0
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push local 2
push local 3
call Screen.drawCircle 3
pop temp 0
label IF_FALSE1
push local 0
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push local 3
sub
push local 2
push local 3
sub
push local 1
push local 3
add
push local 2
push local 3
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE2
push local 0
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
push local 1
push local 2
push local 3
call Wall.drawTriangle 4
pop temp 0
label IF_FALSE3
push local 0
push constant 4
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
push local 1
push local 2
push local 3
call Wall.drawDiamond 4
pop temp 0
label IF_FALSE4
push local 0
push constant 5
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push pointer 0
push local 1
push local 2
push local 3
call Wall.drawStar 4
pop temp 0
label IF_FALSE5
push constant 0
return
function Wall.clearHeart 4
push argument 0
pop pointer 0
push argument 1
push constant 8
sub
pop local 1
push argument 2
push constant 8
sub
pop local 2
push local 1
push local 2
push constant 32
call Math.multiply 2
add
pop local 3
push constant 16384
push local 3
add
pop local 0
push local 0
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 512
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 544
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 576
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 608
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 640
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 672
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 704
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 736
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 768
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 800
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 832
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 864
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 896
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 928
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 960
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 992
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 33
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 65
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 97
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 129
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 161
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 193
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 225
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 257
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 289
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 321
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 353
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 385
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 417
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 449
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 481
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 513
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 545
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 577
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 609
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 641
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 673
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 705
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 737
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 769
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 801
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 833
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 865
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 897
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 929
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 961
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 993
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Wall.regenerateTargets 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 5
lt
not
if-goto WHILE_END0
push local 0
push this 4
add
pop pointer 1
push that 0
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 1
add
push constant 4
call Random.randRange 1
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push local 0
call Wall.getValidPosition 2
pop temp 0
push local 0
push this 4
add
push constant 0
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push local 0
call Wall.drawTarget 2
pop temp 0
push this 6
push constant 1
add
pop this 6
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Wall.isOverlapping 4
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 5
lt
not
if-goto WHILE_END0
push local 0
push argument 3
eq
push local 0
push this 4
add
pop pointer 1
push that 0
not
or
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 1
push local 0
push this 3
add
pop pointer 1
push that 0
pop local 2
push argument 1
push local 1
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push local 1
sub
pop local 3
goto IF_END1
label IF_FALSE1
push local 1
push argument 1
sub
pop local 3
label IF_END1
push local 3
push constant 40
lt
push argument 2
push local 2
sub
call Math.abs 1
push constant 40
lt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
return
label IF_FALSE2
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Wall.getValidPosition 3
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 10
lt
not
if-goto WHILE_END0
push constant 50
push constant 9
call Random.randRange 1
push constant 45
call Math.multiply 2
add
pop local 1
push constant 50
push constant 4
call Random.randRange 1
push constant 30
call Math.multiply 2
add
pop local 2
push pointer 0
push local 1
push local 2
push argument 1
call Wall.isOverlapping 4
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push this 2
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push this 3
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push this 8
add
push constant 3
call Random.randRange 1
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push this 9
add
push constant 3
call Random.randRange 1
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push argument 1
push this 2
add
push constant 50
push argument 1
push constant 80
call Math.multiply 2
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push this 3
add
push constant 50
push argument 1
push constant 40
call Math.multiply 2
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push this 8
add
push constant 3
call Random.randRange 1
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push this 9
add
push constant 3
call Random.randRange 1
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Wall.updateTargets 3
push argument 0
pop pointer 0
push constant 0
pop local 0
push pointer 0
push argument 2
call Wall.spawnHeart 2
pop temp 0
push argument 1
push constant 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
label WHILE_EXP0
push local 0
push this 5
lt
not
if-goto WHILE_END0
push local 0
push this 4
add
pop pointer 1
push that 0
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 1
push local 0
push this 3
add
pop pointer 1
push that 0
pop local 2
push local 0
push this 2
add
push local 0
push this 2
add
pop pointer 1
push that 0
push local 0
push this 8
add
pop pointer 1
push that 0
push this 10
call Math.multiply 2
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 3
add
push local 0
push this 3
add
pop pointer 1
push that 0
push local 0
push this 9
add
pop pointer 1
push that 0
push this 10
call Math.multiply 2
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 2
add
pop pointer 1
push that 0
push constant 30
lt
push local 0
push this 2
add
pop pointer 1
push that 0
push constant 480
gt
or
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push this 8
add
push local 0
push this 8
add
pop pointer 1
push that 0
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 2
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE2
push local 0
push this 3
add
pop pointer 1
push that 0
push constant 30
lt
push local 0
push this 3
add
pop pointer 1
push that 0
push constant 200
gt
or
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push this 9
add
push local 0
push this 9
add
pop pointer 1
push that 0
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 3
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE3
push constant 0
call Screen.setColor 1
pop temp 0
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 1
push local 2
push constant 15
call Screen.drawCircle 3
pop temp 0
label IF_FALSE4
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 1
push constant 15
sub
push local 2
push constant 15
sub
push local 1
push constant 15
add
push local 2
push constant 15
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE5
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 3
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push pointer 0
push local 1
push local 2
push constant 15
call Wall.drawTriangle 4
pop temp 0
label IF_FALSE6
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 4
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push pointer 0
push local 1
push local 2
push constant 15
call Wall.drawDiamond 4
pop temp 0
label IF_FALSE7
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 5
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push pointer 0
push local 1
push local 2
push constant 15
call Wall.drawStar 4
pop temp 0
label IF_FALSE8
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 6
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push pointer 0
push local 1
push local 2
push constant 15
call Wall.drawHeart 4
pop temp 0
label IF_FALSE9
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push local 0
push this 2
add
pop pointer 1
push that 0
push local 0
push this 3
add
pop pointer 1
push that 0
push constant 15
call Screen.drawCircle 3
pop temp 0
label IF_FALSE10
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push local 0
push this 2
add
pop pointer 1
push that 0
push constant 15
sub
push local 0
push this 3
add
pop pointer 1
push that 0
push constant 15
sub
push local 0
push this 2
add
pop pointer 1
push that 0
push constant 15
add
push local 0
push this 3
add
pop pointer 1
push that 0
push constant 15
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE11
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 3
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push pointer 0
push local 0
push this 2
add
pop pointer 1
push that 0
push local 0
push this 3
add
pop pointer 1
push that 0
push constant 15
call Wall.drawTriangle 4
pop temp 0
label IF_FALSE12
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 4
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push pointer 0
push local 0
push this 2
add
pop pointer 1
push that 0
push local 0
push this 3
add
pop pointer 1
push that 0
push constant 15
call Wall.drawDiamond 4
pop temp 0
label IF_FALSE13
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 5
eq
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push pointer 0
push local 0
push this 2
add
pop pointer 1
push that 0
push local 0
push this 3
add
pop pointer 1
push that 0
push constant 15
call Wall.drawStar 4
pop temp 0
label IF_FALSE14
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 6
eq
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push pointer 0
push local 0
push this 2
add
pop pointer 1
push that 0
push local 0
push this 3
add
pop pointer 1
push that 0
push constant 15
call Wall.drawHeart 4
pop temp 0
label IF_FALSE15
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE0
push constant 0
return
function Wall.dispose 0
push argument 0
pop pointer 0
push this 2
call Array.dispose 1
pop temp 0
push this 3
call Array.dispose 1
pop temp 0
push this 1
call Array.dispose 1
pop temp 0
push this 4
call Array.dispose 1
pop temp 0
push this 8
call Array.dispose 1
pop temp 0
push this 9
call Array.dispose 1
pop temp 0
push this 0
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
